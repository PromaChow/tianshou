name: Ubuntu GPU
on:
  push:
    branches:
      - main

jobs:
  gpu:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: "poetry config virtualenvs.create true --local

          poetry config virtualenvs.in-project true --local

          "
      - id: measurement-7
        name:
          Record Measurement After Setup a local virtual environment (if no poetry.toml
          file)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Setup a local virtual environment (if no poetry.toml file)
          task: get-measurement
      - name:
          Define a cache for the virtual environment based on the dependencies
          lock file
        uses: actions/cache@v3
        with:
          key: venv-${{ hashFiles('poetry.lock') }}
          path: ./.venv
      - name: Install the project dependencies
        run: 'poetry install --with dev --extras "envpool"

          '
      - id: measurement-10
        name: Record Measurement After Install the project dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install the project dependencies
          task: get-measurement
      - name: wandb login
        run: "poetry run wandb login e2366d661b89f2bee877c40bee15502d67b7abef

          "
      - id: measurement-12
        name: Record Measurement After wandb login
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: wandb login
          task: get-measurement
      - name: Test with pytest
        run: "poetry run poe test

          "
      - id: measurement-14
        name: Record Measurement After Test with pytest
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Test with pytest
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${ steps.final-measurement.outputs.data-total-json }' > total_energy_consumption-1740227529.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-1740227529.json
